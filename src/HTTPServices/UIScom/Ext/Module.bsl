
// Функция - Incoming call /IN
// Делаем запись в рс.ИсторияЗвонков и отправляем номер входящего звонка в Centrifugo на Канал оператора!
//
// ТелоЗапроса = {
// "direction":{{direction}},
// "notification_name":{{notification_name}},
// "notification_mnemonic":{{notification_mnemonic}},
// "virtual_phone_number":{{virtual_phone_number}},
// "notification_time":{{notification_time}},
// "scenario_name": {{scenario_name}},
// "start_time":{{start_time}},
// "called_phone_number":{{called_phone_number}},
// "calling_phone_number":{{calling_phone_number}},
// "call_session_id":{{call_session_id}}
// }
//
// Параметры:
//  Запрос - HttpЗапрос - входящий запрос - получаем Тело 
// 
// Возвращаемое значение:
// HTTPСервисОтвет - ответ на входящий запрос
//
Функция IncomingCall_IN(Запрос) 
	
	ОтправлятьСразуВCentrifugo = Истина; // выключатель отправки в Centrifugo 
	
	КодСостояния = 200;  // по умолчанию Ok
	Причина = ""; 
	
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(); 
	
	структураПолей = UIScomСервер.JSON_в_Данные(ТелоЗапроса); // уже в попытке
	
	Если ПустаяСтрока(ТелоЗапроса) 
		Или структураПолей = Неопределено Тогда
		Причина = "Empty body of request or body not JSON-text!";
		КодСостояния = 400;
		ЗаписьЖурналаРегистрации("UIScom", УровеньЖурналаРегистрации.Ошибка, , , "POST-запрос - "+Причина+"
		|"+ТелоЗапроса);

	ИначеЕсли типЗнч(структураПолей) <> тип("Структура") Тогда 
		Причина = "Error in JSON. Not structure!";
		КодСостояния = 400;
		ЗаписьЖурналаРегистрации("UIScom", УровеньЖурналаРегистрации.Ошибка, , , "POST-запрос - "+Причина+"
		|"+ТелоЗапроса);
		
	Иначе // --------------------------------------------------------   
		стрЗвонка = UIScomСервер.ПолучитьСтруктуруПолейИсторииЗвонков(структураПолей);
		Если НЕ стрЗвонка.Свойство("Входящий") Тогда
			стрЗвонка.Добавить("Входящий", Истина);
		КонецЕсли;
		
		Если стрЗвонка.Свойство("Канал") Тогда
			Канал = стрЗвонка.Канал;
		Иначе
			стрЗвонка.Вставить("Канал", "");
		КонецЕсли;  
		
		Если стрЗвонка.Входящий Тогда
			Отправлен = CentrifugoСервер.ПослатьСообщениеНаКанал( стрЗвонка, Ложь ); // отправка ТОЛЬКО номера!!! 
			стрЗвонка.Вставить("Отправлен", Отправлен);                                       
			Если НЕ Отправлен Тогда 
				Причина = "Error Centrifugo send to channel: " + Канал + " !";
				КодСостояния = 417;
				ЗаписьЖурналаРегистрации("Centrifugo", УровеньЖурналаРегистрации.Ошибка, , стрЗвонка.ИдСессии, Причина);
			КонецЕсли;
		КонецЕсли;
		
		стрЗвонка.Вставить("ТелоЗапроса", ТелоЗапроса); // весь запрос!
		РегистрыСведений.ИсторияЗвонков.СоздатьЗапись( стрЗвонка );
	КонецЕсли;	
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния, Причина);
	Возврат Ответ;
КонецФункции  

// Функция - Outcoming call OUT
// Делаем запись в рс.ИсторияЗвонков, НО ничего не отправляем в Centrifugo!
//
// Параметры:
//  Запрос - HttpЗапрос - входящий запрос - получаем Тело 
// 
// Возвращаемое значение:
// HTTPСервисОтвет - ответ на входящий запрос
//
Функция OutcomingCall_OUT(Запрос)
	Ответ = IncomingCall_IN(Запрос); 
	Возврат Ответ;
КонецФункции

// Функция - Record end REC
// Получаем существующую запись по измерениям и Добавляем данные!
//
// Параметры:
//  Запрос - HttpЗапрос - входящий запрос - получаем Тело 
// 
// Возвращаемое значение:
// HTTPСервисОтвет - ответ на входящий запрос
//
Функция RecordEnd_REC(Запрос)
	КодСостояния = 200;  // по умолчанию Ok
	Причина = ""; 
	
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(); 
	Попытка
		структураПолей = UIScomСервер.JSON_в_Данные(ТелоЗапроса);
	Исключение	
		структураПолей = Неопределено;
	КонецПопытки;
	
	Если ПустаяСтрока(ТелоЗапроса) 
		Или структураПолей = Неопределено Тогда
		Причина = "Empty body of request or body not JSON-text!";
		КодСостояния = 400;
		ЗаписьЖурналаРегистрации("UIScom", УровеньЖурналаРегистрации.Ошибка, , , "POST-запрос /REC - "+Причина+"
		|"+ТелоЗапроса);
		
	ИначеЕсли типЗнч(структураПолей) <> тип("Структура") Тогда 
		Причина = "Error in JSON. Not structure!";
		КодСостояния = 400;
		ЗаписьЖурналаРегистрации("UIScom", УровеньЖурналаРегистрации.Ошибка, , , "POST-запрос /REC - "+Причина+"
		|"+ТелоЗапроса);
	
	Иначе // --------------------------------------------------------   
		стрЗвонка = UIScomСервер.ПолучитьСтруктуруПолейИсторииЗвонков(структураПолей);
		стрЗвонка.Вставить("ТелоЗапроса", ТелоЗапроса); // весь запрос ВСЕГДА пишем 19.07.2022
				
		стрЗаписи = РегистрыСведений.ИсторияЗвонков.ПолучитьЗапись(стрЗвонка.Номер, стрЗвонка.Входящий, стрЗвонка.ИдСессии); 
		Если стрЗаписи = Неопределено Тогда
			стрЗаписи = стрЗвонка;
		Иначе	  
			Для каждого эл Из стрЗвонка Цикл 
				стрЗаписи.Вставить( эл.Ключ, эл.Значение);	// добавление/перезапись в предыдущую запись!   
			КонецЦикла;
		КонецЕсли; 
		РегистрыСведений.ИсторияЗвонков.СоздатьЗапись( стрЗаписи, Истина ); // 20.07.2022 сначала пишем новую запись!
		
		// +++ 19.07.2022 - отправка ВСЕХ накопленных данных !
		Отправлен = CentrifugoСервер.ПослатьСообщениеНаКанал( стрЗаписи, Истина ); 
		Если Отправлен Тогда
			стрЗаписи = РегистрыСведений.ИсторияЗвонков.ПолучитьЗапись(стрЗвонка.Номер, стрЗвонка.Входящий, стрЗвонка.ИдСессии); 
			стрЗаписи.Вставить("Отправлен", Отправлен);
			РегистрыСведений.ИсторияЗвонков.СоздатьЗапись(стрЗаписи, ЛОЖЬ);// ПЕРЕЗАПИСЬ!
		Иначе
			Причина = "Error Centrifugo send to channel: " + стрЗвонка.Канал + " !";
			КодСостояния = 417;
			ЗаписьЖурналаРегистрации("Centrifugo", УровеньЖурналаРегистрации.Ошибка, , стрЗвонка.ИдСессии , Причина);
		КонецЕсли;	
	КонецЕсли;	
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния, Причина);
	Возврат Ответ;
КонецФункции

Функция ПингGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200, "<html><body>Its Work!</body></html>");
	Возврат Ответ;
КонецФункции
